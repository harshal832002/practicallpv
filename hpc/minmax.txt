#include<iostream>
#include<omp.h>
#include<cstdlib>
#include<ctime>

using namespace std;

int main(){
    int n=1000;
    int arr[n];

    srand(time(NULL));
    for(int i=0;i<n;i++){
        arr[i]=rand()%100;
    }

    int  min_val =arr[0];
    #pragma omp parallel for reduction(min:min_val)
    for(int i=0;i<n;i++){
        if(arr[i]<min_val){
            min_val=arr[i];
        }
    }
    cout << "min value" << min_val << endl;

    int  max_val =arr[0];
    #pragma omp parallel for reduction(max:max_val)
    for(int i=0;i<n;i++){
        if(arr[i]>max_val){
            max_val=arr[i];
        }
    }
    cout << "max value" << max_val << endl;

    int sum=0;
    #pragma omp parallel for reduction(+:sum)
    for(int i=0;i<n;i++){
        sum+=arr[i];
    }

    cout << "sum" << sum << endl;

    double avg=0.0;
    avg=(double)sum/n;

    cout<< "average" << avg <<endl;

    return 0;

}